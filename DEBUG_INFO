How to compile Quill
----------------------

We are using the standard Qt compiling engine, QMake. The way to
compile Quill is:

   qmake && make

How to compile using debugging information
------------------------------------------

Quill uses the standard 'debug' config variable of qmake, see

   http://developer.qt.nokia.com/doc/qt-4.8/qmake-project-files.html

Thus you can activate the debugging options by just setting this
variable:

   qmake debug=yes && make

For making this process easier, it has been added a custom script in
the root directory of the project:

   ./build.sh && make

How to use the debugger
-----------------------

We use GDB to debug Quill.
Refer to the GDB documentation for more information:

   https://www.gnu.org/software/gdb/documentation/

How to compile with unit tests and benchmark support
----------------------------------------------------

Unit tests generation is activated by default.

For running the unit tests, only thing to be done is invoking each
generated command. For example:

   ut_regions

How to compile with coverage support
------------------------------------

Quill uses the 'COV_OPTION' custom config variable of qmake.

Thus you can activate this option by just setting this variable:

   qmake COV_OPTION=on && make

After the compilation, a good way of getting the coverage is through
the execution of the unit tests.

Actually, that way we will also know how good are the unit tests and
how far are they covering the code.

Of course, another way would be through the execution of an
application linked to this Quill with coverage support.

Pretty printed coverage results can be obtained, after running the
code, with the tools 'lcov' and 'genhtml'.

How to generate the API documentation
-------------------------------------

API Documentation is generated by default. Thus you can deactivate
this option by just unsetting this variable:

   qmake doc=no && make

How to package Quill
----------------------

We are using the standard Debian packaging tools, so the way to create
installable packages of Quill is:

   dpkg-buildpackage -rfakeroot -b -us -uc

This will generate the following packages:

   libquill1_<version>_<arch>.deb
   libquill-dev_<version>_<arch>.deb
   libquill-doc_<version>_<arch>.deb
   libquill1-dbg_<version>_<arch>.deb
   libquill-tests_<version>_<arch>.deb
   quill-utils_<version>_<arch>.deb

To install them, run 'dpkg -i *.deb'

How to package passing the different compilation options
--------------------------------------------------------

QMake compilation options have been integrated into the Debian
packaging, thus you can activate or deactivate them by just setting
the environment variable 'DEB_BUILD_OPTIONS'.

For example, for packaging with the debugging compilation options we
would need to set this variable as following:

   export DEB_BUILD_OPTIONS="debug nostrip"

and then compiling normally:

   dpkg-buildpackage -rfakeroot -b -us -uc

Notice that the 'nostrip' option has to be additionally passed in this
case in order to prevent the debian tools from removing the symbols on
the generated binaries.

These is the complete list of the correlated QMake and
'DEB_BUILD_OPTIONS' configuration options:

   * 'debug' to set "debug=yes" in QMake.
   * 'cov' to set "COV_OPTION=on" in QMake.
   * 'nodocs' to not generate the documentation.

Notice that the 'DEB_BUILD_OPTIONS' have only to be set for the
contrary value of the default one in the QMake correlated one.


 -- Andres Gomez <agomez@igalia.com>  Tue, 31 Jan 2012 19:32:00 +0100
